name: MSBuild

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  SOLUTION_FILE_PATH: .

permissions:
  contents: write

jobs:
  refactor:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Install tools
      run: |
        sudo apt install clang-format

    - name: Set changed files
      run: |
        echo "FILES_CHANGED<< " >> $GITHUB_ENV
        git fetch origin main --depth 1
        git diff --name-status origin/main..HEAD \
        | grep -E "^(M|A|R).*\.(c|h|cpp|hpp)" \
        | sed -sr "s/^(R|A|M).*\t(.+)/\2/" >> $GITHUB_ENV
        echo " " >> $GITHUB_ENV
        echo "FILES_CHANGED: `${{ env.FILES_CHANGED }} | sed -z "s/\n/ /g"`"

    - name: Set target branch (PR)
      if: ${{ env.FILES_CHANGED != null && github.event_name == 'pull_request' }}
      run: echo "TARGET_BRANCH=${{ github.head_ref }}" >> $GITHUB_ENV

    - name: Set target branch (push)
      if: ${{ env.FILES_CHANGED != null && github.event_name == 'push' }}
      run: echo "TARGET_BRANCH=${{ github.ref_name }}" >> $GITHUB_ENV

    - name: Through undefined branch error
      if: ${{ env.FILES_CHANGED != null && env.TARGET_BRANCH == null}}
      run: echo "TARGET_BRANCH is undefined" 1>&2 && expr 0 > /dev/null

    - name: Refactor
      if: ${{ env.FILES_CHANGED != null }}
      run: |
        echo "TARGET_BRANCH: ${{ env.TARGET_BRANCH }}"
        clang-format -i -style=file:.clang-format `${{ env.TARGET_BRANCH }} | sed -z "s/\n/ /g"`
        git config --global user.email "action@github.com"
        git config --global user.name "action"
        git add .
        (git commit -m "Refactor by Github Actions" && git push origin ${{ env.TARGET_BRANCH }}) || expr 1 > /dev/null
    
  build:
    needs: refactor
    strategy:
      matrix:
        arch: [x86, x64]
        variants: [debug, release]

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3

    - uses: ilammy/msvc-dev-cmd@v1.12.1
      with:
        arch: ${{ matrix.arch }}

    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: |
        cmake --preset ${{ matrix.arch }}-${{ matrix.variants }}
        cmake --build out/build/${{ matrix.arch }}-${{ matrix.variants }}
        cmake --install out/build/${{ matrix.arch }}-${{ matrix.variants }}
